function interceptNetworkRequests(o){const t=XMLHttpRequest.prototype.open,n=XMLHttpRequest.prototype.send;-1!==t.toString().indexOf("native code")&&(XMLHttpRequest.prototype.open=function(){return o.onOpen&&o.onOpen(this,arguments),o.onLoad&&this.addEventListener("load",o.onLoad.bind(o)),o.onError&&this.addEventListener("error",o.onError.bind(o)),t.apply(this,arguments)},XMLHttpRequest.prototype.send=function(){return o.onSend&&o.onSend(this,arguments),n.apply(this,arguments)});const e=window.fetch||"";if(-1!==e.toString().indexOf("native code")){window.fetch=function(){o.onFetch&&o.onFetch(arguments);const t=e.apply(this,arguments);return t.then(o.onFetchResponse,o.onFetchError),t};const t=Response.prototype.json,n=Response.prototype.text,s=Response.prototype.blob;Response.prototype.json=function(){const n=t.apply(this,arguments);return n.then(o.onFetchLoad&&o.onFetchLoad.bind(o,"json")),n},Response.prototype.text=function(){const t=n.apply(this.arguments);return t.then(o.onFetchLoad&&o.onFetchLoad.bind(o,"text")),t},Response.prototype.blob=function(){const t=s.apply(this.arguments);return t.then(o.onFetchLoad&&o.onFetchLoad.bind(o,"blob")),t}}return o}interceptNetworkRequests({onFetch:console.log,onFetchResponse:console.log,onFetchLoad:console.log,onOpen:console.log,onSend:console.log,onError:console.log,onLoad:console.log});
